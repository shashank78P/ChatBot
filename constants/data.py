basicDetails = "Shashank P is a Software Engineer based in Bengaluru, India. He can be reached via phone at +91 7022540380 or email at 19.shashank.p@gmail.com. His portfolio is available at https://shashank-p-portfolio.vercel.app/. You can connect with him on LinkedIn at https://www.linkedin.com/in/shashank-p-62b1ba240/ and explore his YouTube channel at https://www.youtube.com/channel/UCnv36ZvEbuxOgyouqakauug."
PreferredWorkLocations = "Shashank prefers work-from-office locations in Bengaluru, Karnataka, India; Mysuru, Karnataka, India; and Tumakuru, Karnataka, India. He is also open to work-from-home opportunities."
about = "Shashank P is a Software Engineer with strong problem-solving skills and the ability to excel in both team environments and individual projects. He is passionate about tackling challenges and is highly motivated to build real-time applications."
educationDetails = "Shashank P holds a B.Tech degree in Computer Science Engineering with a CGPA of 8.92. He pursued this degree at Global Academy of Technology, Bengaluru, from December 2020 to June 2024."
skills = "Shashank P is proficient in a wide range of technologies, including: - Frontend Development: React.js, Next.js, Tailwind.css, HTML, CSS - Backend Development: Express.js, Node.js, Flask, Django - Programming Languages: JavaScript, TypeScript, Python - Database Management: MongoDB, MySQL, PostgreSQL, Redis, Prisma - Tools and Technologies: Docker, Git, Zod Validation"

raphacureWorkExperience = "Work Experience 1 - Node.js Developer. Company: Raphacure (Cure And Card Pvt. Ltd). Role: Node.js Developer. Employee Type: Work from Office (Bengaluru). Work Duration: 18 November 2024 - Present. Project Worked on: Raphacure (admin portal, hr portal)"

raphacureResponsibility = """Responsibilities in raphacure:1. Built responsive UI components using React.js to improve interactivity.2. Managed application state with Context API and Hooks, integrating external libraries when necessary.3. Delivered real-time updates in chat systems and notifications via Socket.io.4. Integrated REST and WebSocket APIs for data fetching and display."""

skillsUsedAtRaphacure = "Skills Used at rephacure: React.js, Node.js, Express.js, PostgreSQL, MongoDB, Knex.js, Postman, Joi Validation, Socket.io, Redux, Git."

dataVectorWorkExperience = """Work Experience 2 - Software Engineer Trainee. Company: Datavector Tech Pvt. Ltd. Role: Software Engineer Trainee. Work Type: Work from Home. Work Duration: 15 March 2024 - 15 November 2024.  Project Worked on: 2Excell (Learning Management System) Project Summary: I developed a multi-role Learning Management System (LMS) designed for educational institutions, providing a seamless platform for administrators, teachers, students, and parents to interact. The LMS system was specifically designed to cater to the unique needs of each user group through role-based dashboards and functionalities. For administrators, the system offered full control over user management, including the ability to create and assign roles, manage content, and configure system settings. Teachers had access to a comprehensive suite of tools for managing their classes, creating quizzes, tracking student performance, and sharing learning resources. Students could access their syllabi, participate in quizzes, track their attendance, and view assignments. Parents could easily monitor their child's performance and receive event notifications. The system included several key modules to support the diverse needs of users. The Syllabus Module allowed teachers to upload various types of content such as documents, images, and videos, which students could access to track their learning progress. The Question Bank Module allowed teachers to create various types of questions such as multiple-choice, true/false, fill-in-the-blanks, and match-the-following, which could be used in quizzes. The Quiz Module featured a proctoring system with time management and auto-grading capabilities, enabling teachers to assess students' knowledge efficiently. The Attendance Module allowed teachers to mark attendance and track student presence, while the Events Module integrated a calendar to manage school events, meetings, and deadlines. The Class Routine Module provided a scheduling feature for both students and teachers, helping them manage their daily routines effectively. The Mark Book Module allowed teachers to input and track students' scores for assignments and exams, providing valuable insights into class performance. Overall, the LMS system created an efficient ecosystem for communication, learning, and administration, making it easier for all users to manage and track their academic activities. The LMS seamlessly integrated the roles of administrators, teachers, students, and parents, enhancing collaboration and streamlining daily academic processes. This comprehensive system aimed to transform the educational experience for all stakeholders by offering an intuitive and user-friendly interface, supported by robust backend functionalities for managing roles, content, and user interactions across multiple modules."""

dataVectorResponsibility = """Responsibilities in DataVector Tech: 1. Develop scalable Node.js APIs using Express.js for seamless operations. 2. Ensured robust data validation and security with Zod schemas. 3. Optimized performance with database tuning on PostgreSQL and caching with Redis. 4. Enhanced the user interface with React.js, implementing reusable and performant components."""

skilledUserdAtDataVector = "Skilled used at DataVector: 1. Backend: Node.js, Express.js, Knex.js, Zod Validation, Redis 2. Frontend: React.js, TypeScript, Tailwind CSS, Redux 3. Database: PostgreSQL 4. Tools: Docker, Git, Postman, Visual Studio Code"

zedblockWorkExperience = """Work Experience 2 - MERN Stack Developer (Intern). Company: Zedblock Technology. Role: MERN Stack Developer Intern. Employee Type: Work from Home. Work Duration: 09 February 2023 - 10 June 2023. Project Worked on: Joolt (Jaunt Apps Dashboard, Admin Dashboard). Project Summary: During my internship, I worked on the Joolt project, focusing on the Jaunt Apps Dashboard and Admin Dashboard. These dashboards included a wide range of features for managing social media, CRM, HR, inventory tracking, customer support, and strategic planning. I used the MERN stack, including React, Node.js, Express.js, MongoDB, Next.js, Nest.js, TypeScript, and TailwindCSS to build these features."""

keyModuleWorkedInZedblock = """Key Modules Developed in Joolt (Project under Zedblock): 1. Social Dashboard: Integrated Facebook and Instagram APIs to create a social dashboard for the Joolt project, providing insights and analytics to help Zedblock track and enhance its social media presence. Features: Facebook API integration, Instagram API integration, social media insights, and analytics. 2. Social Media Calendar: Developed a feature for planning and scheduling social media posts within the Joolt project, ensuring Zedblock maintained an organized and consistent social media strategy. Features: Post scheduling, organized social media planning. 3. Contract Management: Implemented a system in the Joolt project to create, manage, and track contracts with Zedblock's clients and partners, improving workflow and contract management. Features: Contract creation, contract management, contract tracking. 4. Delivery Tracking: Developed a delivery tracking system in Joolt that allowed Zedblock users to track the status and location of their orders, ensuring a better customer experience. Features: Order status tracking, order location tracking. 5. CRM (Customer Relationship Management): Contributed to the development of a CRM tool within Joolt to help Zedblock manage customer interactions, track sales opportunities, and store customer data. Features: Manage customer interactions, track sales opportunities, store and retrieve customer data. 6. Inventory Management: Built an inventory management module in the Joolt project to efficiently track and manage Zedblock's product inventory, ensuring stock levels were always up to date. Features: Track product inventory, manage inventory levels. 7. Strategic Planning: Participated in defining Zedblock’s long-term goals and strategies by contributing to the strategic planning module in Joolt for guiding growth and direction. Features: Plan long-term goals, define strategic initiatives. 8. HR Tool: Contributed to the development of an HR tool within Joolt to help Zedblock manage employee data, leave requests, and performance evaluations, streamlining HR processes. Features: Manage employee data, process leave requests, evaluate employee performance. 9. Customer Support: Developed a customer support module in Joolt to handle Zedblock's customer inquiries, manage support tickets, and provide timely assistance to customers. Features: Handle customer inquiries, ticketing system, provide timely support. 10. Marketing and Sales: Worked on the development of marketing and sales features in Joolt, such as campaign management, lead generation, and sales performance tracking, contributing to Zedblock's marketing efforts. Features: Campaign management, lead generation, sales performance tracking. 11. Invite Team Members: Implemented a feature in Joolt to invite team members to Zedblock's platform and manage their access levels, ensuring proper permissions and access controls. Features: Invite team members, manage user access levels."""

zedblockResponsibility= """Responsibilities in Zedblock Technology: 1. Applied knowledge of MongoDB, Nest.js, Next.js, TypeScript, and Node.js to create robust and effective web applications. 2. Integrated Facebook and Instagram APIs to create a social dashboard, providing insights and analytics for enhancing the company’s social media presence. 3. Contributed to the development of key modules such as CRM, HR tools, contract management, and delivery tracking systems, improving operational efficiency. 4. Played an integral role in strategic planning and collaborated on features like social media scheduling, customer support, and team member management. Skills Used at Zedblock: React.js, Node.js, Express.js, MongoDB, Next.js, Nest.js, TypeScript, TailwindCSS, Git."""

dailyDashProjectIntro = """* Project Name: Daily Dash * is personal project: true * Technologies Used: HTML, CSS, Tailwind CSS, JavaScript, TypeScript, Next.js, Node.js, Nest.js, MongoDB, Git * Project Link: https://daily-dash.vercel.app/ * Frontend Code Link: https://github.com/shashank78P/DailyDash * Backend Code Link: https://github.com/shashank78P/DailyDashApi * Introduction: DailyDash is a dynamic communication and productivity platform I contributed to, designed to facilitate seamless user interaction. The platform uses JWT token authentication, ensuring secure logins, while also allowing users to track device activity. Users can register manually or through Google and manage their device logins. Key features include quick access features, bookmark organization with sorting and filtering options, and an integrated chat system that supports private conversations, file sharing, and group chats. Additionally, DailyDash enables scheduled meetings, with email notifications, real-time chat, multimedia sharing, and participant engagement features. My role involved designing and implementing key features and enhancing the user experience within the DailyDash project. *Dummy Login Credentials: Email: testdailydash@gmail.com Password: A&5ErFs7$n-V.*! * Daily Dash Sign Up Page, Login Page, Home Page and Quick Access Page demo video: https://www.youtube.com/watch?v=ooq6qw0R6YI  * Daily Dash Profile Page and Block page demo video: https://www.youtube.com/watch?v=B2j-esk8PeY * Daily Dash Meeting application, Daily Dash, chat, emoji reaction, hand raise and participants list page demo video: https://www.youtube.com/watch?v=z2jbL_6ZRbk&list=PL97HzcXdIb4fYVfhqRUPq8nDbt1EMFVdT&index=4&t=2s"""

dailyDashAuthModuleFeatures = """*Features: - JWT token is used for user authentication" - Keep track of device logins for each user" - Ability to block a particular logged-in device" - Users can sign up manually with their email and password or also by Google account" - Authentication is done using a JWT token"""

dailyDashAuthModuleImages = """Images: - The image shows a signup page where users can enter their first name, last name, and email to sign up. Alternatively, users have the option to sign up using Google login. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/sign-up.png - The image shows a login page where users can enter their email and password to log in, or use the Google login option. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/log-in.png", - The image shows a reset password page where users can enter and confirm their new password, with a 'Reset Password' button. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/reset-password.png - The image shows a forgot password page where users can enter their email to receive a password reset email. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/forget-password.png - The image shows a block page where the device name (e.g., mobile, laptop) and type of Chrome browser are displayed, along with the last login time. Users can enter their password to block the device from logging in. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/block.png", - The image shows a profile page with the profile image displayed at the top center, along with a 'Change' option below it. There is a personal details card that includes first name, last name, email, date of birth, and address, each with an edit option. The page also features a 'Change Password' button and a 'Logout' button. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/profile.png", - The image shows a list of logged-in devices, with each card displaying the device type (e.g., mobile, laptop), browser type, and the last login time. There is also an option to block each device. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/profile2.png"""

dailyDashQuickAccessModule = """Quick Access: * Features: - Add title and link for quick access. - Edit and delete quick access items. * video url: https://www.youtube.com/watch?v=ooq6qw0R6YI. * Images: - The image shows a home page with the 'Daily Dash' title displayed at the center. In the quick access section, there is an option to add quick access. The left sidebar has four options: 1. Home Page, 2. Bookmark, 3. Meeting, 4. Chat App and 5. Profile Page. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/Computer-home-page.png",: - The image shows an 'Add Quick Access' form where users can enter a title and a link. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/add-quick-access.png: - The image shows an Edit Quick Access' form where users can modify the title and link. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/edit-quick-access.png"""

dailyDashBookMarkModuleFeatures = """BookMark: Features: - Bookmark contains Title, Description, Link, Priority (High, Medium, Low), Pinned status, Hash Tags - Users can choose between list view and card view for their bookmark list, providing different visual representations. - Users can filter bookmarks based on the date they were created - Provide sorting options, possibly based on specific fields like title, priority, or creation date ext.. - Allow users to navigate through multiple pages of bookmarks - Users can specify how many rows of bookmarks to display on each page - Users can search for bookmarks based on titles, descriptions, or other relevant criteria - Allow users to manually upload an image or fetch it from the provided website link wile creating bookmark - Users can modify bookmark details - Users can remove bookmarks they no longer need - Users can choose to pin or un-pin bookmark."""

dailyDashBookMarkModuleImages = """Images: - The image shows a bookmarks page listing all bookmarks with details such as title, hashtags, link, priority, creation date/time, and description. Each bookmark has options to open and actions (edit, delete). The page includes pagination, search functionality, and filters. https://shashank-p-portfolio.vercel.app/images/DailyDash/bookmark1.png - The image shows an individual description page with details such as title, priority status, creation date, link, and description. There are options to close the modal, copy the link, and edit the information. https://shashank-p-portfolio.vercel.app/images/DailyDash/bookmark-inner-page.png - The image shows a 'Create Bookmark' page where users can enter the title, link, pin it to quick access, set priority, add hashtags, and provide a description. There is a toggle for 'Get Image by URL' (which, if enabled, fetches a default image from the URL) or a dropdown to upload an images. urls: "https://shashank-p-portfolio.vercel.app/images/DailyDash/create-bookmark.png", "https://shashank-p-portfolio.vercel.app/images/DailyDash/cearte-bookmark2.png" - The image shows an 'Edit Bookmark' page where users can modify the title, link, pin to quick access, priority, hashtags, and description. There is a toggle for 'Get Image by URL' (which, if enabled, fetches a default image from the URL) or a dropdown to upload a new image. urls: https://shashank-p-portfolio.vercel.app/images/DailyDash/edit-bookmark.png, https://shashank-p-portfolio.vercel.app/images/DailyDash/edit-bookmark%20(2).png."""

dailyDashChatModuleFeatures = """Chat: Features: - Users can have private conversations with each other - Users can search for other users and initiate a chat - Users can create a group and by default he will be the group admin - Users can include emojis in their text messages to express emotions or reactions - Allow users to share various types of files with each other, such as images, documents, etc. - Users have the ability to record videos or screen directly within the chat application and share them with others - Users can record short audio messages and send them as part of their chat conversations - Users can search for specific messages within a chat - Users can search for other users - Schedule meetings within a group or one-on-one meetings with other users - Groups have administrators who can manage group settings - Admins can promote or demote other members to/from admin status - Admins can also remove user from the group - Only admins can edit group title, description, and group picture - Users can choose to leave a group"""

dailyDashChatModuleImages = """Image: - The image shows an individual chat interface with the following layout: On the left side, there is a list of individual users. On the right side, the chat interface displays the opponent's profile picture, name, typing status (if the user is typing), and online status (if the user is online) at the top left. There is a video call icon to initiate a call and an option to search messages. At the bottom, there are icons for attachment, audio, video, text input, emoji, and a send button. The middle section displays the chat messages. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/chat-page.png.. - The image shows a chat interface where the left side displays a list of users, allowing the user to switch between individual and group chat sections. Each user or group chat is labeled with the number of unread messages. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/chat-page2.png. - The image displays a group chat interface with group details. At the top center, there is a profile image with an option to change the group photo. Below, the group name, description, and creation date are shown. The interface also includes the following options: 1. Video Call, 2. Add Members, and a search bar for messages. The list of group members is displayed, along with their respective roles (admin or member). image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/group-profile2.png. - The image also displays options to add a new contact to initiate a one-on-one chat and to create a new group. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/options.png. - The image displays a modal window containing a form that allows users to add a new contact. This form also provides the option to initiate a one-on-one chat with the newly added contact. The interface is designed to streamline the process of connecting with others and starting private conversations, offering a simple and intuitive way to manage contacts and communication. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/add-new-contact.png. - The image displays a modal window to create a new group. It includes an input field to enter the group name and an option to select users from the contact list. Once the desired members are chosen, the user can create the group, facilitating easy setup for group chats. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/create-group.png. - The image showcases a one-on-one chat demo, where the user is entering a message along with some emojis. The messages and files shared are displayed in the message section. In the header, the user’s profile picture is shown, along with their online status and other relevant details. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/message.png. - The image features a modal window over a chat interface background. The modal includes an option to start audio recording, with controls to stop, pause, and reset the recording. Once the recording is completed, there is an option to send the recorded audio. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/audio-recorder.png. - The image displays a modal window over a chat interface background. The modal contains options to start video recording, with controls to stop, pause, and reset the recording. Additionally, there is an option to send the recorded video, along with audio mute/unmute controls. Users can also switch between the front and back cameras during the recording. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/video-recorder.png. - The image displays a slider with a meeting list background. It contains detailed information about each meeting, including the meeting title, description, meeting length, meeting date and time, participants count, and the meeting link. The 'Who can join' status is also shown, with options like ['MANUALLY ADDED', 'ANYONE CAN JOIN WITH LINK']. Additionally, the participants list is displayed, showing each participant's profile image, name, email, and attendance status (YES or NO). The invited participants list is also included. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/meeting-inner-page.png. - The image displays a pop-up modal to create a meeting. The modal includes fields to enter the meeting title, meeting length, and description. It also features an option to select who can join the meeting, with choices such as ['MANUALLY ADDED', 'ANYONE CAN JOIN WITH LINK']. Additionally, users can specify the meeting date. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/create-meeting%20(2).png. - The image displays a pop-up modal to edit a message. The modal includes a text input field where users can modify the message content. It also provides options to update any attached media or files, along with the ability to save or cancel the changes. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/edit-meeting.png. - The image displays two Chrome windows opened side by side, both showing a meeting link. On the left side of the screen, there are options to turn on the video and audio. On the right side, the meeting details are shown, including the title, description, meeting timings, total participants, and the meeting status. A button to join the meeting is also displayed on the right side. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/meeting-enty-page1.png. - The image displays two Chrome windows side by side, both joined to the same meeting. In the header section, meeting details are shown, including the meeting title, participants count, absentees count, and meeting length. There is also an option to invite additional users to the meeting. At the bottom center of the screen, a set of meeting controls is displayed. These include options to present the screen, toggle audio, toggle video, leave the meeting, raise a hand, and send emojis in the meeting. There is also a chat button for engaging in the meeting’s chat feature. Each button is clearly labeled, providing intuitive access to the essential meeting functions. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/meeting-page2.png. - The image displays a meeting page where one user is visible on video, while another user is actively chatting. The video feed of the first user is shown prominently, and the chat section displays the ongoing conversation between the users. The interface allows for both video interaction and text-based communication simultaneously, enhancing the overall meeting experience. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/meeting-chat.png. - The image shows two Chrome windows side by side. In the first window, a user is visible on video, while in the second window, the user is presenting their screen. The video feed is displayed alongside the shared screen, allowing participants to see both the presenter’s video and the content being shared in real-time. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/meeting-screen-shre-result.png. - The image displays a participants list, where each participant is represented by their profile photo and name. Next to each participant, there is a pin icon to pin the user for easy access. The list also indicates which users have raised their hands. Additionally, the audio and video status of each participant is shown, indicating whether they have their audio and video turned on or off. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/meeting-participants-list.png. - The image shows a modal window for inviting people to a meeting by entering their email addresses. The modal includes an input field where users can type the email addresses of those they wish to invite. It likely includes an option to send invitations once the emails are entered, streamlining the process of adding participants to the meeting. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/meeting-invite-user.png. - The image shows a meeting page on the left side of the screen, while on the right side, a Chrome window is opened displaying an invitation email. The meeting page on the left includes details such as the meeting title, participants, and other relevant information, while the right side highlights the invitation email sent to participants, providing a link or instructions to join the meeting. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/meeting-invite-link-mail.png.
"""

dailyDashMeetingModuleFeature = """Meeting: Features - Display a list of scheduled meetings. - Users can create and update meeting details. - Fields: Title, Description, Length, Date, Participants, Joining Permissions. - Specify who can join the meeting (anyone, only contacts, etc.). - Send email notifications to participants about the scheduled meeting when it meeting created. - Allow users to add email addresses, and if the user is not registered, send an invitation link while creating meeting. - Meeting status based on date and length relative to the current date (Not started, On Going, Completed). - Only allow entry to meetings with 'On Going' status. - Inside meeting room participants can see list of participants (present and absent). - Participants can engage in real-time text chat during the meeting. - Allow participants to react with emojis during the meeting. - Participants can digitally raise their hand to indicate a desire to speak. - Participants can share their screen with others in the meeting. - Allow participants to share video and audio during the meeting. - Users can pin a particular participant or their screen share for focused viewing. - Participants can leave the meeting at any time."""
dailyDashMeetingModuleImagesVideo = """ * Video url: https://www.youtube.com/watch?v=z2jbL_6ZRbk * Images:  - This image displays a meeting page where all meetings are listed, showing details such as the meeting title, created by, status, meeting date, meeting time, and the 'Who can join' status, with options like ['MANUALLY ADDED', 'ANYONE CAN JOIN WITH LINK']. Additional information includes the meeting length and description. The page also features a modal option with search functionality, pagination, filters, and a 'Create Meeting' button. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/meeting.png. - The image displays a slider with a meeting list background. It contains detailed information about each meeting, including the meeting title, description, meeting length, meeting date and time, participants count, and the meeting link. The 'Who can join' status is also shown, with options like ['MANUALLY ADDED', 'ANYONE CAN JOIN WITH LINK']. Additionally, the participants list is displayed, showing each participant's profile image, name, email, and attendance status (YES or NO). The invited participants list is also included. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/meeting-inner-page.png. - In the DailyDash project, the Edit Meeting Form is a key feature designed to update meeting details effectively. In this form, users can: Edit the Meeting Title to ensure the title accurately represents the purpose of the meeting in the DailyDash platform. Specify or adjust the Meeting Length, helping users plan the duration effectively within DailyDash. Define Who Can Join the Meeting by setting permissions for participants, ensuring only the intended individuals can access the meeting via DailyDash. Add or modify Users' Email Addresses, allowing users to invite or update participants seamlessly within the DailyDash Edit Meeting Form. Select or update the Meeting Date, ensuring the scheduled time remains accurate in the DailyDash project. Provide or adjust a detailed Meeting Description, enabling users to include relevant information or agenda for the meeting within the DailyDash platform. https://shashank-p-portfolio.vercel.app/images/DailyDash/edit-meeting.png. - In the DailyDash project, this image represents the Meeting Welcome Page, showcasing a user-friendly interface designed for seamless meeting entry.. - On the left side, the page displays a rectangular section where users can manage their video and audio settings. This includes: Video On/Off toggle to enable or disable the camera. Audio On/Off toggle to control the microphone settings. On the right side, the page provides critical meeting details for participants, such as: Meeting Title to identify the purpose of the meeting. Meeting Description offering additional context or agenda for the session. Meeting Link that participants can use to join the meeting. Total Participants indicating the number of attendees. Meeting Status to display the current state of the meeting (e.g., ongoing, scheduled). A prominent Join Now button to allow users to enter the meeting instantly. https://shashank-p-portfolio.vercel.app/images/DailyDash/meeting-enty-page1.png. - In the DailyDash project, this screen demonstrates the real-time communication feature within a meeting. After successfully joining the meeting using the "Join Now" button, both users utilize the chat interface for instant messaging. The real-time chat is powered by Socket.IO for bidirectional communication, ensuring messages are delivered instantly without delays. The interface dynamically updates for all participants, showing live interactions in a seamless manner. This feature significantly enhances collaboration during meetings, providing a smooth and engaging user experience. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/meeting-chat.png. - In the DailyDash project, this screen demonstrates the screen-sharing feature during a meeting. On the right side, one of the users has started sharing their screen, allowing all participants to view the shared content in real-time. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/meeting-screen-share.png. - In the DailyDash project, this screen showcases the meeting interface layout with a structured and intuitive design for seamless collaboration. Top Section: The top bar displays the meeting title, the total participants count, and the absentees count to provide a quick overview. Additionally, an Invite button is available exclusively for the meeting creator, enabling them to invite more participants during the meeting. Below this section, there are four pinned user cards, showing highlighted participants for better visibility. Bottom Section: The bottom section houses a set of action buttons for managing and interacting during the meeting: Share Screen: Enables participants to share their screen for collaborative discussions. Audio Toggle: Allows users to mute or unmute their microphone. Leave Meeting Button: Provides an option to exit the meeting. Hand Raise: Lets participants raise their hand to request attention or ask questions. Emoji Button: Adds reactions for real-time feedback without interrupting the meeting. Chat Button: Opens the chat panel for real-time messaging. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/meeting-page2.png. - In the DailyDash project, this screen demonstrates the Invite Participants to Meeting feature, enhancing collaboration by allowing users to quickly invite others. Left Window Functionality: The left window displays a form where the user can invite participants to the meeting by entering their email addresses. Once the email is entered, an invite email is automatically sent to the provided address, containing the meeting link and details. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/meeting-invite-user.png. - In this image, two windows are shown side by side: This window shows the user viewing the meeting invite email they received. The email contains the meeting details, such as the meeting title, time, description, and the Join Meeting link. This window displays the user clicking the Join Meeting button in the email, ready to join the meeting. The meeting page will open, where the user can see all the meeting details and participants. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/meeting-invite-link-mail.png. - User clicks on a participant's name in the DailyDash meeting: The Participants List in the DailyDash Meeting feature is revealed, displaying a detailed overview of all meeting participants. Information displayed in the Participants List: For each participant, several icons and statuses are visible in the Participants List: 1. Pinned Icon: If the participant is pinned, a pin icon is shown next to their name in the Participants List within the DailyDash Meeting. 2. Hand Raise Icon: If the participant has raised their hand, a hand raise icon appears next to their name in the Participants List under the DailyDash Meeting feature. 3. Mic Status: Indicates whether the participant’s microphone is on or off in the DailyDash Meeting feature. 4. Camera Status: Indicates whether the participant’s camera is on or off in the DailyDash Meeting feature. image url: https://shashank-p-portfolio.vercel.app/images/DailyDash/meeting-participants-list.png."""

advanceToDoListIntro = """Project name: Advance ToDo List.project link: https://advance-to-do-list-front-end.vercel.app/login.Frontend code link: https://github.com/shashank78P/AdvanceToDoListFrontEnd.Backend code link: https://github.com/shashank78P/AdvanceTodoListBackendEnd.Introductions: The Advance To-Do List web app allows a user to create, read, update or delete to-do tasks.Its user-friendly interface includes a secure login system to protect user data. The app features pagination for easy navigation through tasks, ensuring a smooth user experience, especially with a large number of entries. The search functionality allows users to quickly locate specific tasks by task name. Furthermore, users can filter tasks based on their status, distinguishing between active and completed tasks..Video url: "https://www.youtube.com/watch?v=TbZwKGdO9SI."""
advanceToDoListFeatures = """Fetures: - Create, Read, Update or Delete to-do tasks. - Secured login system. - Search functionality based on to-do task name. - Pagination. - Filter to-do task by status. - Delete and un-do completed to-do task."""
advanceToDoListImages = """Images: - Login Modal (Switch between login and signup): The image displays the Advance ToDo List login modal with a toggle button for switching between login and signup options. It includes input fields for the user's email and password, allowing users to either log in to their Advance ToDo List account or create a new one. This feature ensures a smooth login/signup process for users. image url:  image url: https://shashank-p-portfolio.vercel.app/images/AdvanceToDoList/Login1.png - Login Modal with Validation: This image shows the Advance ToDo List login modal with input fields for email and password. It incorporates validation to ensure the entered email follows the correct format, and the password meets the required criteria. The validation is part of the Advance ToDo List user-friendly experience, ensuring the user provides correct details before proceeding. image url: https://shashank-p-portfolio.vercel.app/images/AdvanceToDoList/login2.png - Invalid Login Toast Message: The image displays the Advance ToDo List login modal showing the toast message 'Invalid login' after incorrect credentials are entered. This feature helps notify the user about errors during the login attempt, improving the Advance ToDo List user experience. image url: https://shashank-p-portfolio.vercel.app/images/AdvanceToDoList/login5.png - Signup Modal with Pre-filled Details: The image shows the Advance ToDo List signup modal where the user has filled out their name, email, and password. The input fields are pre-populated, allowing the user to proceed smoothly with account creation. Input validation ensures the details provided are correct. image url: https://shashank-p-portfolio.vercel.app/images/AdvanceToDoList/signup1.png - Home Page View: The Advance ToDo List home page interface is shown, featuring a comprehensive task list view. This page allows users to manage their tasks efficiently, providing easy access to all the features of the Advance ToDo List. image url: https://shashank-p-portfolio.vercel.app/images/AdvanceToDoList/HomePageFullScreenDesktop.png - Active Tasks List: This image displays the Advance ToDo List interface with the 'Active' tab selected. Users can see all active tasks with checkboxes to mark them as completed. Additional features include task search, task deletion, undo completed task deletion, and pagination. image url: https://shashank-p-portfolio.vercel.app/images/AdvanceToDoList/TaskActiveSection.png - Completed Tasks List: The image displays the Advance ToDo List with the 'Completed' tab selected. It shows tasks marked as completed, along with options to toggle their status back to 'Active.' Other features include task search, task deletion, undo completed task deletion, and pagination. image url: https://shashank-p-portfolio.vercel.app/images/AdvanceToDoList/TaskCompletedSection.png - Create Task Form: This image shows the form used to create new tasks in the Advance ToDo List. The form includes fields for task title, description, and status, allowing users to add a new task to their list. Image url: https://shashank-p-portfolio.vercel.app/images/AdvanceToDoList/CreateTask.png - Edit Task Form: The image displays the Advance ToDo List task editing form, where users can modify the task title, description, and status. Users can update tasks as needed within the Advance ToDo List. Image url: https://shashank-p-portfolio.vercel.app/images/AdvanceToDoList/TaskEditPage.png - View Task Details: The image shows the Advance ToDo List page displaying the details of an individual task. Users can edit or delete tasks from this page, making it an essential feature for task management in the Advance ToDo List. Image url: https://shashank-p-portfolio.vercel.app/images/AdvanceToDoList/TaskViewPage.png. * Technologies used: HTML, CSS, Java Script, React Js, Node Js, Express Js, Mongo DB"""

orgAttend = """* Project Name: OrgAttend. * Code Link: https://github.com/shashank78P/OrgAttend. * Introductions: Welcome to OrgAttend, your solution for seamless organizational management. Effortlessly navigate through diverse organizations, each with unique structures. OrgAttend empowers owners to define custom job titles, create dynamic teams, and add members. Leaders, co-leaders, and owners can efficiently manage attendance, ensuring accurate tracking. The system streamlines leave management, allowing employees to request leaves with approvals handled by designated leaders or owners.. * Video url: https://www.youtube.com/watch?v=TbZwKGdO9SI. * Technologies used: HTML, CSS, JavaScript", Django."""
orgAttendFeatures = """Features: - Effortlessly switch between multiple organizations, each with its distinct structure and workforce. - Owners can define and assign custom job titles, representing specific roles within the organization. - Facilitate enhanced collaboration with dynamic teams, comprised of leaders, co-leaders, and members. - Team leaders, co-leaders, and organization owners can efficiently take attendance, ensuring accurate tracking of team participation. - Users can sign up manually with their email and password or also by Google account - Employees can submit leave requests, with approvals handled by team leaders, co-leaders, or the organization owner. - Authentication is done using a JWT token"""
orgAttendImages = """Images: - The image displays the top header section of the OrgAttend interface, where users can switch between different companies. On the right side of the header, there are options to change the password and log out. Below the header, the user profile section is shown, which includes the user's profile image along with their details, such as name, role, email, phone number, and address. The page features three tabs: Dashboard, Attendance, and Leave Request. The Dashboard tab is active, displaying the percentage of leave taken by the user. The leave types are listed as Sick Leave, Casual Leave, Privilege Leave, and Maternity Leave. There is also an option to filter the attendance data per team, with a date range filter for 'From' and 'To.'' In the Attendance section, the attendance percentage for all teams is shown, with the same date filter option for customizing the range. image url: https://shashank-p-portfolio.vercel.app/images/StayInTime/UserHomePage.png - The image displays an option to switch between different organizations. This feature allows users to easily navigate between various organizations within the platform. The option is typically located in the top header section, enabling quick access and seamless transitions between different organizational structures and data. image url: https://shashank-p-portfolio.vercel.app/images/StayInTime/OrgSwitchingTab.png - The image displays an option to switch between different organizations. This feature allows users to easily navigate between various organizations within the platform. The option is typically located in the top header section, enabling quick access and seamless transitions between different organizational structures and data. image url: https://shashank-p-portfolio.vercel.app/images/StayInTime/OrgSwitchingTab.png - In this image, the Attendance tab is active, displaying a visual representation of the user's attendance history. The chart or graph shows attendance percentages, with labels representing different levels of attendance: No Attendance, 25% Attendance, 50% Attendance, 75% Attendance, and 100% Attendance. These labels are color-coded in varying shades of green to indicate the corresponding levels of attendance, with opacity levels differentiating the percentages. There is also a button to change the year, allowing users to view attendance data for different time periods. image url: https://shashank-p-portfolio.vercel.app/images/StayInTime/UserDetailsPg.png - This image displays a form to edit the organization's details. The form includes input fields for the following information: Organization Name, City, State, Country, Pincode, Website Link, Social Media Link, Contact Email, Company Logo (for uploading an image), Owner Emails (to list the emails of organization owners), and a Description field to provide additional details about the organization. image url: https://shashank-p-portfolio.vercel.app/images/StayInTime/EditOrganization.png - In this image, the Leave Request tab is active, displaying a list of all leave requests with their status. The list includes the leave name (such as Pending, Accepted, or Rejected), status, leave type (e.g., Sick Leave, Casual Leave, etc.), from date, to date, and reason for the leave. Each leave request can be opened for more details, and there is an option to delete a leave request if needed. The interface includes a search bar to find a specific leave request, pagination for easy navigation through multiple pages of requests, and a button to create a new leave request. image url: https://shashank-p-portfolio.vercel.app/images/StayInTime/UserLeaveRequest2.png - In this image, the leave details are displayed for a specific leave request. The information shown includes the user name, from date, to date, team name, leave type (e.g., Sick Leave, Casual Leave), the verified by field (indicating who approved or verified the leave), and a description providing additional details or reasons for the leave request. image url: https://shashank-p-portfolio.vercel.app/images/StayInTime/LeaveDetails.png - This image displays a form to edit user data. The form includes fields to update the user profile picture, first name, last name, date of birth (DOB), phone number, city, state, country, and pincode. Each field allows the user to modify their personal information, with the option to upload or change their profile picture. image url: https://shashank-p-portfolio.vercel.app/images/StayInTime/EditUserForm.png - This image displays a particular organization page, showcasing key organizational details such as the organization logo, name, email, address, number of employees working, description, website link, and LinkedIn link. The page features three tabs: Leave Requests, Job Title, Teams, and Employees. The Job Title tab is currently active. Below the tab section, a bar chart is displayed, showing the number of employees per job title, with filters for selecting a specific from date and to date range. Additionally, a list of all job titles is shown, including the title, created by, created at date, and actions such as delete, edit, or open each job title. The list includes pagination for easy navigation through multiple job titles. iamge url: https://shashank-p-portfolio.vercel.app/images/StayInTime/JobTitleHomePg.png - In this image, an Add Job Title form is displayed, where users are required to enter the job title. The form includes a simple input field where the user can type the name of the new job title they wish to add to the organization. Once the title is entered, the user can submit the form to save the new job title to the list. Iamge url: https://shashank-p-portfolio.vercel.app/images/StayInTime/AddJobTitleForm.png - In this image, an Add Job Title form is displayed, where users are required to enter the job title. The form includes a simple input field where the user can type the name of the new job title they wish to add to the organization. Once the title is entered, the user can submit the form to save the new job title to the list. Image url: https://shashank-p-portfolio.vercel.app/images/StayInTime/JobTitleEmployeesPage.png - The Create Team Form in the OrgAttend project allows users to easily set up teams within their organization. It enables the assignment of a team name, working hours (check-in and check-out times), and roles such as leader, co-leader, and team members by entering their email addresses. A brief description of the team’s purpose or objectives can also be provided. This form is part of the Team Management module, streamlining the process of organizing teams, managing roles, and ensuring efficient attendance tracking. It integrates with OrgAttend’s broader features, including leave management and attendance tracking, helping organizations stay organized and enhance team collaboration. image url: https://shashank-p-portfolio.vercel.app/images/StayInTime/CreateTeamForm.png - This image represents the Company Profile Page in the OrgAttend platform, displaying key company details such as the company logo, title, email, address, number of employees, description, website link, and LinkedIn profile. The page includes various tabs for easy navigation, including Leave Requests, Job Titles, Teams, and Employees, with the Teams tab currently active. Within the Teams section, there are four summary cards that provide insights into the organization's structure: the number of Leaders, Co-leaders, Members (out of total employees), and the Average Attendance for the organization. The page also features a Leave Types Chart that displays the percentage breakdown of different leave types (Sick Leave, Casual Leave, Privilege Leave, and Maternity Leave), with filters to adjust the date range (from and to date). An Employee per Team bar chart is also present, showing the number of employees per team, with a date filter to adjust the view as needed. Finally, the Teams Listing section shows all existing teams, with a search bar for easy filtering and a button to add new teams. This section is paginated for easier navigation and provides detailed information about each team, including the Team Name, Organization, Check-in Time, Check-out Time, Description, Created By, and Created At. Image url: https://shashank-p-portfolio.vercel.app/images/StayInTime/OrgTeamsPg.png", - This page is accessed when a user views a specific team within the OrgAttend platform. At the top of the page, the organization’s details are displayed, including the logo, title, email, address, number of employees, description, website link, and LinkedIn profile. Below the organization details, several summary cards provide key metrics about the team: Leaders: Displays the number of leaders as a percentage of the total employees. Co-leaders: Shows the number of co-leaders relative to the total employees. Members: Represents the total number of members compared to the entire workforce. Avg Attendance: Displays the average attendance for the team. Check-in Time: Shows the defined check-in time for the team. Check-out Time: Displays the team’s check-out time. Additionally, there’s a Leave Types Chart Card, which allows filtering by a date range (from and to dates). This chart shows the percentage breakdown of leave types for the team, including Sick Leave, Casual Leave, Privilege Leave, and Maternity Leave. The Employee per Team bar chart visualizes the number of employees per team, with a date filter to adjust the view. The Attendance of Team section includes a chart that shows attendance data across months and weekdays, with varying green opacities representing attendance levels (e.g., no attendance, 25%, 50%, 75%, and 100%) based on the team’s performance. This data can be paginated by year for better navigation and analysis. The Employee List section displays all team members, with functionality for pagination, search, and management. The list shows employee details, including name, role (Leader, Co-leader, Member), job title, createdBy, and createdAt. Each employee entry also includes options to edit or delete the entry. Additionally, the section allows team leaders or admins to take attendance and add new employees to the team. Image url: https://shashank-p-portfolio.vercel.app/images/StayInTime/TeamsDetailsPg.png - This page is displayed when a user opens a particular team within the OrgAttend platform. At the top of the page, the team name and the company name are prominently displayed, giving users context about which team they are viewing. Below the header, several summary cards provide key metrics about the team: Leaders: Displays the number of leaders as a percentage of the total number of employees in the team. Co-leaders: Shows the number of co-leaders compared to the total employee count. Members: Represents the number of team members relative to the entire team size. Avg Attendance: Displays the average attendance rate for the team. Check-in Time: Shows the designated check-in time for the team. Check-out Time: Displays the team’s check-out time. The Take Attendance section is a key feature of the page. It allows team leaders or admins to record the attendance for the team members for a specific date. This section includes: Date Input: A field where users can select a date to mark attendance for. Employee List: A list of team members displayed with their image, name, and attendance percentage. Toggle Button: A button next to each employee that allows the user to mark their attendance (e.g., present, absent, or partial attendance). Save Button: Once the attendance has been updated for all members, the user can click the Save button to record the attendance for that day. Image url: https://shashank-p-portfolio.vercel.app/images/StayInTime/TakeAttendancePage.png - This image represents the Company Profile Page in the OrgAttend platform, displaying key company details such as the company logo, title, email, address, number of employees, description, website link, and LinkedIn profile. The page includes various tabs for easy navigation, including Leave Requests, Job Titles, Teams, and Employees, with the Employee tab currently active. Within the Emoployee section, there are four summary cards that provide insights into the organization's structure: the number of Leaders, Co-leaders, Members (out of total employees), and the Average Attendance for the organization. An Employee per job title bar chart is also present, showing the number of employees per job title, with a date filter to adjust the view as needed. Finally, the employee Listing section shows all existing emoployees, with a search bar for easy filtering and a button to add new employee. This section is paginated for easier navigation and provides detailed information about each team, including the Team Name, Organization, Check-in Time, Check-out Time, Description, Created By, and Created At. image url: https://shashank-p-portfolio.vercel.app/images/StayInTime/EmployeesHomePg.png"""

tutorialManagementSystem = """project_name: Tutorial Management System. code_link: https://github.com/shashank78P/OrgAttend. Introductions: Tutorial Management System is a project has some objective to be proficient suitable for most of the training center , it manages job of admin in admission of new student record ,updating fee of existing student and teachers by allocating them a classes .This help admin of respective tutorial go paperless and effortless in searching records. video_url: https://www.youtube.com/watch?v=TbZwKGdO9SI. * technologies_used: HTML, CSS, Java Script, React Js, Node Js, Express Js, MySql"""
tutorialManagementSystemFeturesImages = """*features: - Separate Admin, Teachers and Students page - Fee Management - Allocating classes to students. * images: - The Login Page in the Tutorial Management System provides secure access for Admins, Teachers, and Students. Users enter their username and password to authenticate and gain access to the system. Upon successful login, users are directed to their respective role-specific dashboards—Admin, Teacher, or Student—enabling them to manage or view relevant information. This feature ensures secure and efficient user authentication for the system. image url: https://shashank-p-portfolio.vercel.app/images/TutorialManagementSystem/LoginPage.jpeg - The Home Page of the Tutorial Management System provides a comprehensive overview of key metrics, including the number of Admins, Teachers, Students, and Parents. It also displays the Student Fee Balance in a card format, giving quick insights into financial data. Additionally, the page features a form to add new classes, where Admins can input details such as Teacher ID, Student Roll Number, Class Date, Start Time, End Time, Subject, and Description. This feature streamlines class scheduling and enhances administrative efficiency. image url: https://shashank-p-portfolio.vercel.app/images/TutorialManagementSystem/HomePageDesktop.png - The Student Details Page in the Tutorial Management System displays comprehensive student information across three tabs: Student Profile, Parent Details, and Fee Details. The Student Profile tab shows personal and academic information, while the Parent Details tab displays contact and relationship data for the student's guardians. The Fee Details tab provides an overview of the student's financial status, including paid fees, pending amounts, and payment history, facilitating easy management of student records. image url: https://shashank-p-portfolio.vercel.app/images/TutorialManagementSystem/student_details_page.png - The Teacher Management Page in the Tutorial Management System allows Admins to view detailed information about all registered teachers. The page includes a search functionality to quickly find teachers by name or ID. Admins can also edit teacher details, delete teacher records, or add new teachers to the system. This feature provides efficient management of teacher information, ensuring smooth administrative operations.The Student Fee Management Page in the Tutorial Management System displays a list of all students along with their fee due and associated deadline in the background. A modal form is available to update fee records, where admins can input the fee balance and record payments. The form also allows setting a deadline for any remaining balance if the fee is still pending. This feature ensures efficient fee tracking and management for students, helping admins stay on top of financial deadlines and payments. image url: https://shashank-p-portfolio.vercel.app/images/TutorialManagementSystem/UpdateFeeForm.jpeg. image url: https://shashank-p-portfolio.vercel.app/images/TutorialManagementSystem/TeachersDetails.jpeg - The Fee Details List Page in the Tutorial Management System provides an overview of student fee information, including Student Name, Total Fee, Batch, Fee Balance, and Deadline. Each entry also features an Action column, allowing Admins to take necessary actions like updating fee status, setting deadlines, or marking fees as paid. This page enables efficient tracking and management of fee-related data for all students, ensuring timely payments and clear visibility into financial records. image url: https://shashank-p-portfolio.vercel.app/images/TutorialManagementSystem/FeeDetails.jpeg"""